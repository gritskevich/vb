services:
  app1:
    build: .
    expose:
      - "3000"
    restart: unless-stopped
    init: true
    cap_add:
      - SYS_ADMIN
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=production
    networks:
      - app_network
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=3000"
      - "prometheus.io/path=/metrics"

  app2:
    build: .
    expose:
      - "3000"
    restart: unless-stopped
    init: true
    cap_add:
      - SYS_ADMIN
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=production
    networks:
      - app_network
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=3000"
      - "prometheus.io/path=/metrics"

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    depends_on:
      - app1
      - app2
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app_network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app_network
    depends_on:
      - app1
      - app2

networks:
  app_network:
    driver: bridge